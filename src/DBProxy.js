// Generated by CoffeeScript 2.5.0
(function() {
  var DBProxy, LOG, Proxy, moment;

  moment = require("moment");

  Proxy = require("encaps-proxy");

  LOG = global["mongoLogger"] || console;

  /*
   * 数据库操作层代理
   */
  DBProxy = class DBProxy extends Proxy {
    constructor(target, security) {
      super(target, security);
    }

    proxy(f) {
      var that;
      that = this;
      if (f.name === "connect") {
        return function() {
          return f.apply(that.target, arguments);
        };
      }
      return function() {
        var callback, e, p, paramStr, params, startTime;
        [...params] = arguments;
        callback = params.pop();
        startTime = moment();
        paramStr = "";
        paramStr = ((function() {
          var i, len, results;
          results = [];
          for (i = 0, len = params.length; i < len; i++) {
            p = params[i];
            results.push(JSON.stringify(p));
          }
          return results;
        })()).join(",");
        paramStr = paramStr.length > 100 ? paramStr.substring(0, 100) + "..." : paramStr;
        params.push(function() {
          var endTime;
          endTime = moment();
          LOG.info(`${that.target.constructor.name}.${f.name}:${paramStr}  --${endTime - startTime}ms`);
          return callback.apply(this, arguments);
        });
        try {
          return f.apply(that.target, params);
        } catch (error) {
          e = error;
          (LOG.trace || LOG.error)(`${that.target.constructor.name}.${f.name}:${paramStr}  --${moment() - startTime}ms\n${e.stack}`);
          return callback(e);
        }
      };
    }

  };

  module.exports = DBProxy;

}).call(this);
